<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http auto-config="true" use-expressions="true">
		<!--<intercept-url pattern="/**" access="hasRole('store-tab')" />-->
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<!--<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/" access="permitAll" />  -->
		<logout invalidate-session="true" logout-success-url="/start"
			logout-url="/logout" />
		<http-basic />
	</http>

	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user authorities="ROLE_ADMIN,ROLE_USER" name="services" password="welcome1" />
				<user authorities="ROLE_ADMIN,ROLE_USER" name="user" password="welcome1" />
			</user-service>
			<!-- <password-encoder hash="sha" />
			<jdbc-user-service data-source-ref="dataSource"
		   		users-by-username-query="select username, password, active from employee where username=?" 
 				authorities-by-username-query="select u.username, ur.role_tab from employee u, employee_role ur where u.id = ur.employee_id and u.username =?"/>  -->
		</authentication-provider>
	</authentication-manager>

</beans:beans>